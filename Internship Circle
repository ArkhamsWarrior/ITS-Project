package Main;

import java.util.Scanner;

import java.math.*;

//Created by Jadyn Fletcher and Sam Dicken

public class whatInternship extends internshipsClasses{

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		Scanner input = new Scanner(System.in);
		
		System.out.println("Hi, welcome to the ITS Internship Check! \n\nIn this program, you will discover if you qualify "
				+ "for an internship regarding Information Technology and the possible internships you may qualify for! \n"
				+ "Enter your information and answer the questions to determine your possible and most qualified opportunities.\n");
		System.out.println("What is your name: ");
		final String name = input.next();
		System.out.println("How old are you " + name + "?");
		final String age = input.next();
		System.out.println("What year are you " + name + "?(Freshman, Sophomore, etc.)"); 
		final String year = input.next();
		System.out.println("What is your current, or most recent, GPA out of 4?");
		double GPA = input.nextDouble();
		
		//Used to round the GPA to one decimal place
		double scale = Math.pow(10, 1); 
		GPA= Math.round(GPA*scale)/scale;
		
		
		//Makes sure the GPA entered is between 0 and 4
		if (GPA > 4.0 || GPA < 0.0)
		{
			while (GPA>4.0|| GPA < 0.0)
			{
				System.out.println("Please enter a GPA between 0.0 and 4.0:");
				 GPA = input.nextDouble();
			}
		}
		
		//Ends program if GPA is not 3.0 or higher
		if (GPA < 3.0)
		{
			System.out.println("Your GPA does not meet our minimum requirement.");
			System.exit(0);
		}
		
		//input the data into a student object, and call a function from the object that returns their name, year, GPA

		Student stud = new Student(name, GPA, year);
	
		System.out.println("Now we will ask about your abilities and qualities to determine the internships that you qualify for. \n");

		//Basic qualifications will be it's own point system, and you must have 5/6 points in that to continue to intermediate questions
		 

		Points basicPoints = new Points(); //Call the Points class
		Ans basicAns= new Ans();//Call the answer class
		
		System.out.println("Do you have good verbal and written communication skills?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Are you self-motivated?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Are you able to work in teams and collaborate?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		
		System.out.println("Do you have at least one year of programming?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Do you have good math skills?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Do you have critical thinking skills?");

		basicAns.enterAns(); //Allows the user to input an Answer
		basicAns.checkYorN();//Checks that the answer starts with "y" or "n"


		basicPoints.newAns(basicAns.returnAns());//Assign the answer to the point system 
		basicPoints.getPoints();//Check if the answer is YorN to increment points
		
		//After the 5 questions are answers, we needed a gate that considers the number of points they have and 
		//checks if they have enough points to proceed to the next questions
		//If they don't have the points necessary they still have the option to continue the program 
		
		
		int totalbasicPoints = basicPoints.displayPoints();//Created a variable that holds the user's total number of points
		
		//Ends program if they don't meet the minimum number of requirements 
		if (totalbasicPoints < 5)
		{
		
			System.out.println("Sorry you do not meet the necessary qualifications.");
			System.exit(0);
		}
		int internNums= 1;//Keeps track of the number of internships the user qualifies for
		int unqualNums = 0;//Keeps track of the number of internships the user isn't qualified for
		String internships[] = new String[7];//An array that holds the qualified internships
		String unqualified[]= new String[6];//An array the holds the unqualified internships
		internships[0]= "Information Technology";//Assign IT to the first position of the qualified internship array since you only need the basic req's for this
		
		
		Points SDPoints = new Points(); //Call the Points class and create new objects for each internship 
		Ans SDAns= new Ans();//Call the Ans Class

		
		System.out.println("Have you practiced with Java programming for at least one year?");

		SDAns.enterAns(); //Allows the user to input an Answer
		SDAns.checkYorN();//Checks that the answer starts with "y" or "n"


		SDPoints.newAns(SDAns.returnAns());//Assign the answer to the point system 
		SDPoints.getPoints();//Check if the answer is YorN to increment points

		int SDpoints = SDPoints.displayPoints(); //Collects the points obtained
		
		if (SDpoints > 0)
		{
			internships[internNums] = "Software Developer";//Adds the internship to your qualified internship array
			internNums++;//Increments the number of qualified internships
		}
		else
		{
			unqualified[unqualNums] = "Software Developer";//Adds the internship to your unqualified internships array
			unqualNums++;//Increments the number of unqualified internships
		}
		
		Points DSPoints = new Points(); //Call the Points class
		Ans DSAns= new Ans();
		
		System.out.println("Do you have statistical computer experience?");

		DSAns.enterAns(); //Allows the user to input an Answer
		DSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		DSPoints.newAns(DSAns.returnAns());//Assign the answer to the point system 
		DSPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Have you had experience with R or Python for atleast one year?");

		DSAns.enterAns(); //Allows the user to input an Answer
		DSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		DSPoints.newAns(DSAns.returnAns());//Assign the answer to the point system 
		DSPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Have you worked with analytical data sets?");

		DSAns.enterAns(); //Allows the user to input an Answer
		DSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		DSPoints.newAns(DSAns.returnAns());//Assign the answer to the point system 
		DSPoints.getPoints();//Check if the answer is YorN to increment points
		
		int DSpoints = DSPoints.displayPoints();
		if (DSpoints == 3)
		{
			internships[internNums] = "Data Science";
			internNums++;
		}
		else
		{
			unqualified[unqualNums] = "Data Science";
			unqualNums++;
		}
		
		System.out.println("Can you stay organized when faced with numerous projects and tasks?");

		DSAns.enterAns(); //Allows the user to input an Answer
		DSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		DSPoints.newAns(DSAns.returnAns());//Assign the answer to the point system 
		DSPoints.getPoints();//Check if the answer is YorN to increment points
		
		DSpoints = DSPoints.displayPoints();//Checks the value of points again
		
		if (DSpoints == 4)
		{
			internships[internNums] = "Data Analyst";
			internNums++;
		}
		else
		{
			unqualified[unqualNums] = "Data Analyst";
			unqualNums++;
		}
		
		Points MLPoints = new Points(); //Call the Points class
		Ans MLAns= new Ans();
		
		System.out.println("Do you have experience in Deep Learning (Tensorflow, PyTorch, and/or Keras)?");

		MLAns.enterAns(); //Allows the user to input an Answer
		MLAns.checkYorN();//Checks that the answer starts with "y" or "n"


		MLPoints.newAns(MLAns.returnAns());//Assign the answer to the point system 
		MLPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Have you had at least one year of experience in C++?");

		MLAns.enterAns(); //Allows the user to input an Answer
		MLAns.checkYorN();//Checks that the answer starts with "y" or "n"


		MLPoints.newAns(MLAns.returnAns());//Assign the answer to the point system 
		MLPoints.getPoints();//Check if the answer is YorN to increment points
		
		int MLpoints = MLPoints.displayPoints();
		if (MLpoints == 2)
		{
			internships[internNums] = "Machine Learning";
			internNums++;
		}
		else
		{
			unqualified[unqualNums] = "Machine Learning";
			unqualNums++;
		}

		Points CSPoints = new Points(); //Call the Points class
		Ans CSAns= new Ans();
		
		System.out.println("Do you have practice in Networking (Working with Routers and Switches and Determining Performance Issues)?");

		CSAns.enterAns(); //Allows the user to input an Answer
		CSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		CSPoints.newAns(CSAns.returnAns());//Assign the answer to the point system 
		CSPoints.getPoints();//Check if the answer is YorN to increment points
		
		System.out.println("Have you had experience as a Computer Science Intern (atleast one season)?");

		CSAns.enterAns(); //Allows the user to input an Answer
		CSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		CSPoints.newAns(CSAns.returnAns());//Assign the answer to the point system 
		CSPoints.getPoints();//Check if the answer is YorN to increment points

		int CSpoints = CSPoints.displayPoints();
		if (CSpoints == 2)
		{
			internships[internNums] = "Networking";
			internNums++;
		}
		else
		{
			unqualified[unqualNums] = "Networking";
			unqualNums++;
		}
		
		System.out.println("Have you taken Cyber Security courses?");

		CSAns.enterAns(); //Allows the user to input an Answer
		CSAns.checkYorN();//Checks that the answer starts with "y" or "n"


		CSPoints.newAns(CSAns.returnAns());//Assign the answer to the point system 
		CSPoints.getPoints();//Check if the answer is YorN to increment points
		
		CSpoints = CSPoints.displayPoints(); //Checks the value of points again
		
		if (CSpoints == 3)
		{
			internships[internNums] = "Cyber Security";
			internNums++;
		}
		else
		{
			unqualified[unqualNums] = "Cyber Security";
			unqualNums++;
		}
		
		//Used to hold the number of positions in the array of qualified internships
		int k=0;
		//I made this for loop so that we can create an array without any null values based on the answers of the user
		for (int i = 0; i<internships.length; i ++ )
		{
			//Records the number of occupied indexes in the array
			if (internships[i] != null)
			{
				k++;
			}
		}
		
		
		String results[]= new String[k]; //Create a new array that holds the users number of qualified internships
		
		for (int i = 0; i < k; i++)
		{
			results[i]= internships[i];//Assign the qualified internships to the new array, results.
		}
		//This variable and for loop is used to create an array with the correct number of values for their unqualified internships
		int g = 0;
		for (int i = 0; i<unqualified.length; i ++ )
		{
			//Records the number of occupied indexes in the array
			if (unqualified[i] != null)
			{
				g++;
			}
		}
		
		
		String unqualTotal[]= new String[g]; //Create a new array that holds the total number of unqualified internships
		
		for (int i = 0; i < g; i++)
		{
			unqualTotal[i]= unqualified[i];//Assign the qualified internships to the new array, results.
		}
		
		stud.numInternships(internNums);
		
		System.out.println("\nThese are the internships you qualify for: \n");
		
		for (int i = 0; i < results.length; i++)
		{
			if (i != results.length-1)
			{
				System.out.print(results[i] + ", " );

			}
			else
			{
				System.out.print(results[i] + " \n");
			}
		}
		if (unqualTotal.length==0)
		{
			System.out.println("\nThank you for using our program!");
			System.exit(0);
		}
		else
		{
			
		
		System.out.println("\nThese are the internships you don't qualify for: \n");
		for(int i = 0 ; i < unqualTotal.length ; i++)
		{
			if (i != unqualTotal.length-1)
			{
				System.out.print( unqualTotal[i] + ", " );

			}
			else
			{
				System.out.print(unqualTotal[i] + " \n");
			} 
		}
		
		System.out.println("\nThank you for using our program!");
		}
		


	}


}
